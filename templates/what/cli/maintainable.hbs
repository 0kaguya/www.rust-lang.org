<section id="cli-pitch">
    <div class="container">
        <header>
            <h2>A maintainable code base</h2>
            <div class="highlight highlight-yellow"></div>
        </header>
        <div class="row">
            <article class="six columns box">
                <a href="https://doc.rust-lang.org/book/2018-edition/ch09-00-error-handling.html">
                    <header class="domain-icon">
                        <img src="/static/images/cli-app-structure-2.svg" alt="" />
                        <h3>Catch errors <em>now</em></h3>
                    </header>
                </a>
                <p class="box-content">
                    What if the config file is missing or corrupt? What if that
                    content of that one environment variable is empty? These
                    cases are easy to forget about&mdash;but with Rust's error
                    handling they be helpfully pointed out to you before you
                    even run your program!
                </p>
            </article>
            <article class="six columns box">
                <a href="https://crate-ci.github.io/release.html">
                    <header class="domain-icon">
                        <img src="/static/images/cli-is-no-rocket-science.svg" alt="" />
                        <h3>Easily extend later</h3>
                    </header>
                </a>
                <p class="box-content">
                    Rust allows you to be flexible in the way you organize your
                    code. Start with just a single file and when you need more
                    features, refactor your application with the confidence that
                    you aren't breaking anything.
                </p>
            </article>
        </div>
    </div>
</section>